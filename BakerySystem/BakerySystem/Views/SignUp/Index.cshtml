@model BakerySystem.Models.SYS_USR_INFO

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@{


    ViewBag.Title = "Sign Up";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .textboxWidth {
    width:100% !important;
    }
    </style>
<script>
    function OnComplete(response)
    {
        alert(response);
    }
    $(document).ready(function () {
        $('#phone,#postCode').addClass("textboxWidth");
    });


     $(document).ready(function () {
           $('#username').keyup(function () {
             var userName = $(this).val();

             if (userName.length >= 3) {
                 $.ajax({
                     url: 'http://localhost:52729/RegistrationService.asmx/UserNameExists',
                     method: 'post',
                     data: { userName: userName },
                     dataType: 'json',
                     success: function (data) {
                         debugger
                         var divele = $('#divElement');
                          
                         if (data.Usernameinuse) {
                             divele.text(userName + ' is already exists')
                             divele.css('color', 'red')

                         }
                         else {
                             divele.text(userName + ' is avaliable')
                             divele.css('color', 'green')

                         }
                     },
                     error: function (err) {
                         alert(err);

                     }

                 });
             }
         });
     });

</script>


<script type="text/javascript">

</script>

@using (Ajax.BeginForm("CreateUser", "SignUp", new AjaxOptions { OnSuccess = "OnComplete", HttpMethod = "POST" }, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Create User</h4>
    <hr />
   

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserName)
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" ,@OnChange= "UserCheck(this)" ,Name="username",id="username"} })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="divElement"></div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserPassowrd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserPassowrd, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
            @Html.ValidationMessageFor(model => model.UserPassowrd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phone, new { htmlAttributes = new { onchange = "UserCheck(this)" } })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.phone, new { htmlAttributes = new { @type = "number", @style="'width:100%;'"  } })
            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.street, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.postCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.postCode, new { htmlAttributes = new { @class = "form-control textboxWidth", @type="number"} })
            @Html.ValidationMessageFor(model => model.postCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <br>
    <br>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-outline-primary" style="width:200px" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Menu", "Index", "Home");
</div>
