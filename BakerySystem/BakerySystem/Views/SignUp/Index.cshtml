@model BakerySystem.Models.SYS_USR_INFO

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@{


    ViewBag.Title = "Sign Up";
    Layout = "~/Views/Shared/_Layout.cshtml";
    }
<script>
    function OnComplete(response)
    {
        alert(response);
    }


     function UserCheck() {
        $("#Status").html("Checking...");
        $.post("@Url.Action("UserAlreadyExistsAsync", "SignUp")",
            {
                userdata: $("#Username").val()
            },
        function (data) {
            if (data == 0) {
                $("#Status").html('<font color="Green">Available !. you can take it.</font>');
                $("#Username").css("border-color", "Green");

            }
            else {
                $("#Status").html('<font color="Red">That name is taken.Try Another.</font>');
                $("#Username").css("border-color", "Red");
            }
        });
    }



</script>


<script type="text/javascript">
    $('#UserName').change(function(){
    alert('Changed!');
    @Model.UserName = true;
});
</script>

@using (Ajax.BeginForm("CreateUser", "SignUp", new AjaxOptions { OnSuccess = "OnComplete", HttpMethod = "POST" }, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, new { htmlAttributes = new { onchange = "UserCheck(this)", @class = "control-label col-md-2" } })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPassowrd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPassowrd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPassowrd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MachineIP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MachineIP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MachineIP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperatingSystem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperatingSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperatingSystem, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home");
</div>
